一 配置tomcat
1 tomcat多个实例,让每个实例在不同的tcp端口上提供不同网页内容的服务,且想让webapp都在自己的jvm上,从而可以对他们执行相互独立的操作
修改端口号 和 webapps (修改server.xml,tomcat的主配置文件)

2 Java VM配置: 修改catalina.sh文件
Tomcat的运行方式部分取决于所运行的java虚拟机的配置信息
设置虚拟机内存
JAVA_OPTS='-Xms1024 -Xmx2048'
可以运程调试部署在tomcat服务的webapp应用
JAVA_OPTS="-Xdebug -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n"
可以通过JMX远程客户端连接到tomcat以实现本地管理和监控
JAVA_OPTS="-Dcom.sun.management.jmxremote.port=9999"
JAVA_OPTS="-Dcom.sun.management.jmxremote.ssl=false"
JAVA_OPTS="-Dcom.sun.management.jmxremote.authenticate=false"

3 变换jsp编译器: 修改为ant编译器

4 管理领域,角色和用户
1: 使用tomcat的容器管理的安全防护机制,必须设定领域(用户,密码,角色的集合)
web.xml中设定那些用户组可以访问那些资源,而Tomcat的管理员则可以使用一个或多个领域实现来获取用户,密码及角色信息
配置<Realm>元素
tomcat 自身包含了: UserDatabaseRealm(tomcat-user.xml),JDBCRealm,JNDIRealm,JAASRealm(web.xml中<security-constraint>)

5 tomcat支持四种容器的安全防护
在登录配置:<login-config></login-config>

配置web.xml的<security-constraint>
http验证,需要提供base64编码文本的用户口令 <auth-method>BASIC</auth-method>
http验证,需要提供摘要编码字符串的用户口令 <auth-method>DIGEST</auth-method>,还需要在server.xml中的<Realm>元素中,配置MD5属性
在网页的表单上要求提供用户密码 <auth-method>FORM</auth-method>
以客户端数字证书来确认用户的身份 <>

6 控制会话
1 会话的持续性 :
StandardManager,不会使用Store,只有正常停止时,将会话信息存放在SESSIONS.ser的文件中
PersistentManager,使用Store(Filetore和JDBCStore),可以将会话信息保持到文件和数据库中

2 访问JNDI与JDBC的资源
JNDI用来寻找资源的

二 部署web应用
1 部署web应用程序目录
在server.xml配置<Context docBase="my-webapp" path="/my-webapp"></Context>

2 部署war文件
<Context docBase="my-webapp.war" path="/my-webapp"></Context>

3 热部署
<Host>配置,autoDeploy="true" deployOnStartup="false"
再配置下面3步
server.xml创建一个<Context>元素,嵌套到可以进行热部署的Host中;将war文件复制host的appbase目录中;创建一个指向web解压目录和war文件的文件


三 Tomcat的性能调优
主要包括: web服务器的性能,tomcat请求线程池,jvm的性能,dns查询的配置以及jsp预编译的性能

1 tomcat连接器和Apache httpd连接器模块
tomcat 提供了三种不同的服务器设计实现方法,以服务于http

四 Tomcat与Apache Web服务器整合(Apache httpd)

1: 整合方式
http://blog.csdn.net/smilevt/article/details/8493398

2: Apache与Tomcat的整合


五 Tomcat安全防护
1 系统安全防护
2 配置网络 : tomcat主机的防火墙配置
ws-host是apache httpd的前端web服务器
允许apache httpd访问tomcat
iptables -A input -p tcp --dport 8080 --source ws-host -d 10.0.0.2 -j accept (http连接,非ssl)
iptables -A input -p tcp --dport 8009 --source ws-host -d 10.0.0.2 -j accept (http连接,ssl)
iptables -A input -p tcp --dport 8443 --source ws-host -d 10.0.0.2 -j accept (ajp连接)
不允许其他服务器访问tomcat
iptables -A input -p tcp --dport 8080 -d 10.0.0.2 -j drop
iptables -A input -p tcp --dport 8009 -d 10.0.0.2 -j drop
iptables -A input -p tcp --dport 8443 -d 10,0.0.2 -j drop

3 SecurityManager

4 安全漏洞:
XSS攻击: 获取用户进程的cookie值,成功后便以用户的身份登录
Html注入: 编写html程序,并把html内容插入到网站的网页中
sql注入: 请求中给服务器提交恶意sql查询字符串

5 使用ssl加强tomcat安全防护性能

六 配置
1 server.xml : Tomcat主配置文件
2 web.xml : servlet与其他适用于整个web应用程序设置的配置文件
3 tomcat-users.xml : Tomcat的UserDatabaseRealm用于认证的默认角色,用户以及密码清单
4 catalina.policy : Tomcat的java安全防护策略文件
5 context.xml : 默认安装tomcat的所有主机的所有部署内容.


七 Tomcat的系统架构与设计模式
最外层 server服务器
内层 service服务
service服务内包含两个重要组件： Connector 接受外部请求 和 Container 处理内部 （多对一关系）



